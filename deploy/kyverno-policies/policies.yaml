---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: psp-restrict-adding-capabilities
  annotations:
    policies.kyverno.io/title: Restrict Adding Capabilities
    policies.kyverno.io/category: PSP Migration
    policies.kyverno.io/severity: medium
    kyverno.io/kyverno-version: 1.6.0
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Adding capabilities is a way for containers in a Pod to request higher levels
      of ability than those with which they may be provisioned. Many capabilities
      allow system-level control and should be prevented. Pod Security Policies (PSP)
      allowed a list of "good" capabilities to be added. This policy checks
      ephemeralContainers, initContainers, and containers to ensure the only
      capabilities that can be added are either NET_BIND_SERVICE or CAP_CHOWN.      
spec:
  validationFailureAction: Enforce
  background: true
  rules:
    - name: allowed-capabilities
      match:
        any:
        - resources:
            kinds:
              - Pod
            namespaces:
              - "user*"
      preconditions:
        all:
        - key: "{{ request.operation || 'BACKGROUND' }}"
          operator: NotEquals
          value: DELETE
      validate:
        message: >-
          Any capabilities added other than NET_BIND_SERVICE or CAP_CHOWN are disallowed.          
        foreach:
          - list: request.object.spec.[ephemeralContainers, initContainers, containers][]
            deny:
              conditions:
                all:
                - key: "{{ element.securityContext.capabilities.add[] || '' }}"
                  operator: AnyNotIn
                  value:
                  - NET_BIND_SERVICE
                  - CAP_CHOWN
                  - ''
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: restrict-controlplane-scheduling
  annotations:
    policies.kyverno.io/title: Restrict control plane scheduling
    policies.kyverno.io/category: Sample
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      Scheduling non-system Pods to control plane nodes (which run kubelet) is often undesirable
      because it takes away resources from the control plane components and can represent
      a possible security threat vector. This policy prevents users from setting a toleration
      in a Pod spec which allows running on control plane nodes
      with the taint key `node-role.kubernetes.io/master`.      
spec:
  validationFailureAction: Enforce
  background: true
  rules:
  - name: restrict-controlplane-scheduling-master
    match:
      any:
      - resources:
          kinds:
          - Pod
          namespaces:
          - "user*"
    validate:
      message: Pods in user ns may not use tolerations which schedule on control plane nodes.
      pattern:
        spec:
          =(tolerations):
            - key: "!node-role.kubernetes.io/master"
  - name: restrict-controlplane-scheduling-control-plane
    match:
      any:
      - resources:
          kinds:
          - Pod
          namespaces:
          - "user*"
    validate:
      message: Pods may not use tolerations which schedule on control plane nodes.
      pattern:
        spec:
          =(tolerations):
            - key: "!node-role.kubernetes.io/control-plane"
